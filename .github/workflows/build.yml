name: Build and Test on Pull Request

permissions:
  contents: read
  pull-requests: write
  packages: write

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
  workflow_call:
  workflow_dispatch:

jobs:
  build-test:
    concurrency:
      group: build-test-${{ github.ref }}-${{ matrix.task }}
      cancel-in-progress: true
    name: Build and Test (${{ matrix.task }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [build, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 #v4.0.0
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ${{ matrix.task }}
        run: |
          if [ "${{ matrix.task }}" == "build" ]; then
            pnpm run build
          else
            pnpm run test
          fi

  docker:
    concurrency:
      group: docker-${{ github.ref }}
      cancel-in-progress: true
    name: Build and Push Docker Image
    needs: build-test
    runs-on: ubuntu-latest
    environment: Staging
    outputs:
      build-image-digest: ${{ steps.docker-build.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata Action
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value={{sha}}-${{ github.actor }}
            type=sha,format=short

      - name: Build and Push Docker Image
        id: docker-build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    name: Deploy to deploys.app
    needs: docker
    runs-on: ubuntu-latest
    environment: Staging
    env:
      DEPLOYS_AUTH_USER: ${{ secrets.DEPLOYS_AUTH_USER }}
      DEPLOYS_AUTH_PASS: ${{ secrets.DEPLOYS_AUTH_PASS }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add Deploy Status to PR
        id: deploy-status
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ### <span aria-hidden="true">ðŸš€</span> Preview deployment is in progress...

            The preview deployment is being prepared. This may take a few minutes. Please wait for the deployment to complete before checking the preview URL.
            | Name | Resource |
            |:-:|------------------------|
            |<span aria-hidden="true">ðŸ”¨</span> Latest Commit | ${{ github.sha }} |
            |<span aria-hidden="true">ðŸ“¦</span> Image Digest | ${{ needs.docker.outputs.build-image-digest }} |
      
      - name: Install Deploys CLI
        run: script/install-deploys-cli.sh

      - name: Create deployment
        run: |
          deploys deployment deploy \
            -project=tonklaw-projects	\
            -location=gke.cluster-rcf2 \
            -image=ghcr.io/${{ github.repository }}@${{ needs.docker.outputs.build-image-digest }} \
            -name=preview-${{ github.event.number }}

      - name: Get deployment URL
        id: deployment-url
        run: |
          URL=$(deploys deployment get \
            -project=tonklaw-projects	\
            -location=gke.cluster-rcf2 \
            -name=preview-${{ github.event.number }} \
            -oyaml \
          | grep '^url:' | sed 's/^url: //')
          echo "URL=${URL}" >> $GITHUB_ENV

      - name: Update PR comment with deployment URL
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ### <span aria-hidden="true">ðŸš€</span> Preview deployment is ready!

            The preview deployment is ready. You can access the preview at the following URL: https://${{ env.URL }}.

            | Name | Resource |
            |:-:|------------------------|
            |<span aria-hidden="true">ðŸ”¨</span> Latest Commit | ${{ github.sha }} |
            |<span aria-hidden="true">ðŸ“¦</span> Image Digest | ${{ needs.docker.outputs.build-image-digest }} |